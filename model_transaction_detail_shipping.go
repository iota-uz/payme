/*
Payme Merchant API

API for managing Payme Merchant.

API version: 1.0.0
Contact: danil@iota.uz
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package paymeapi

import (
	"encoding/json"
)

// checks if the TransactionDetailShipping type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TransactionDetailShipping{}

// TransactionDetailShipping struct for TransactionDetailShipping
type TransactionDetailShipping struct {
	Title *string `form:"title" json:"title,omitempty"`
	Price *int32 `form:"price" json:"price,omitempty"`
}

// NewTransactionDetailShipping instantiates a new TransactionDetailShipping object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransactionDetailShipping() *TransactionDetailShipping {
	this := TransactionDetailShipping{}
	return &this
}

// NewTransactionDetailShippingWithDefaults instantiates a new TransactionDetailShipping object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransactionDetailShippingWithDefaults() *TransactionDetailShipping {
	this := TransactionDetailShipping{}
	return &this
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *TransactionDetailShipping) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionDetailShipping) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *TransactionDetailShipping) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *TransactionDetailShipping) SetTitle(v string) {
	o.Title = &v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *TransactionDetailShipping) GetPrice() int32 {
	if o == nil || IsNil(o.Price) {
		var ret int32
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionDetailShipping) GetPriceOk() (*int32, bool) {
	if o == nil || IsNil(o.Price) {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *TransactionDetailShipping) HasPrice() bool {
	if o != nil && !IsNil(o.Price) {
		return true
	}

	return false
}

// SetPrice gets a reference to the given int32 and assigns it to the Price field.
func (o *TransactionDetailShipping) SetPrice(v int32) {
	o.Price = &v
}

func (o TransactionDetailShipping) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TransactionDetailShipping) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.Price) {
		toSerialize["price"] = o.Price
	}
	return toSerialize, nil
}

type NullableTransactionDetailShipping struct {
	value *TransactionDetailShipping
	isSet bool
}

func (v NullableTransactionDetailShipping) Get() *TransactionDetailShipping {
	return v.value
}

func (v *NullableTransactionDetailShipping) Set(val *TransactionDetailShipping) {
	v.value = val
	v.isSet = true
}

func (v NullableTransactionDetailShipping) IsSet() bool {
	return v.isSet
}

func (v *NullableTransactionDetailShipping) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransactionDetailShipping(val *TransactionDetailShipping) *NullableTransactionDetailShipping {
	return &NullableTransactionDetailShipping{value: val, isSet: true}
}

func (v NullableTransactionDetailShipping) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransactionDetailShipping) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


